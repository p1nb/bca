Declare a Multidimensional Array. Display specific element from a
Multidimensional array. Also delete given element from the Multidimensional
array.(After each operation display array content.

Ans-

NOTE: PHP function is saved as "ass2b1.php"

<html>
<body bgcolor="gold">
<?php
$stud=array('0'=>array('name'=> 'deepak' ,'age'=>20,'addr'=>'girim'),
            '1'=>array('name'=> 'shankar', 'age'=>21,'addr'=>'khor'),
            '2'=>array('name'=> 'ganesh' , 'age'=>19,'addr'=>'shirur'),
            '3'=>array('name'=> 'radhu' , 'age'=>21,'addr'=>'khor'));
print_r($stud);                                                                                                                          
echo "<br>";
echo "<br> Element for delete is:";
echo "<br>stud[1]['age']<br>";
echo $stud[1]['age'];
echo "<br><br>";
unset($stud[1]['age']);
print_r($stud);
?>
</body>
</html>

Set A q1
Write a menu driven program to perform the following operations on an
associative array:
a) Display the elements of an array along with the keys.
b) Display the size of an array DC
AnsHTML File:
<html>
<form action='ass2a1.php' method='post'>
<pre> <h3>OPERATIONS</h3>
 1<input type='radio' name='a' value='1'>Display.<br>
 2<input type='radio' name='a' value='2'>size.<br>
 3<input type='radio' name='a' value='3'>delete.<br>
 4<input type='radio' name='a' value='4'>reverse.<br>
 5<input type='radio' name='a' value='5'>traverse.<br>
 <input type='submit' value='ok'> <input type='reset' value='cancel'><br>
</pre>
</form>
</body>
</html>
Set B q1
Declare a Multidimensional Array. Display specific element from a
Multidimensional array. Also delete given element from the Multidimensional
array.(After each operation display array content.
AnsNOTE: PHP function is saved as "ass2b1.php"
<html>
<body bgcolor="gold">
<?php
$stud=array('0'=>array('name'=> 'deepak' ,'age'=>20,'addr'=>'girim'),
 '1'=>array('name'=> 'shankar', 'age'=>21,'addr'=>'khor'),
 '2'=>array('name'=> 'ganesh' , 'age'=>19,'addr'=>'shirur'),
 '3'=>array('name'=> 'radhu' , 'age'=>21,'addr'=>'khor'));
print_r($stud);
echo "<br>";
echo "<br> Element for delete is:";
echo "<br>stud[1]['age']<br>";
echo $stud[1]['age'];
echo "<br><br>";
unset($stud[1]['age']);
print_r($stud);
?>
</body>
</html>
Set A q3
Declare array. Reverse the order of elements, making the first element last and
last element first and similarly rearranging other array elements.[Hint :
array_reverse()]
Ans-
<?php
$numbers = [10, 20, 30];
$reversed = array_reverse($numbers);
print_r($reversed);
print_r($numbers);
Set B q3
Write a menu driven program to perform the following queue related operations
a) Insert an element in queue
b) Delete an element from queue
c) Display the contents of queue
AnsHTML File:
<html>
<body bgcolor=skyblue>
<form action="ass2C1.php" method="post">
Enter choice :
<br><input type="radio" name="ch" value=1> Insert element in stack <br>
<input type="radio" name="ch" value=2> Delete element from stack <br>
<input type="radio" name="ch" value=3> Display content of stack <br>
<input type="radio" name="ch" value=4> Insert element in queue<br>
<input type="radio" name="ch" value=5> Delete element from queue <br>
<input type="radio" name="ch" value=6> Display content of queue <br>
<br>
<input type="submit" value="submit">
<input type="reset" value="reset">
</body>
</html>
PHP Function:
NOTE: PHP function is saved as "ass2C1.php"
<html>
<body bgcolor="gold">
<?
$choice=$_POST['ch'];
{
 $arr=array(1,2,3,4,5,6,7,8,9,10);
 switch($choice)
 {
 case 1:
 array_push($arr,10);
 print_r($arr);
 break;
 case 2:
 $ele=array_pop($arr);
 echo "Poped element : $ele";
 break;
 case 3:
 print_r($arr);
 break;
 case 4:
 array_unshift($arr,"10");
 print_r($arr);
 break;
 case 5:
 $ele=array_shift($arr);
 echo "Deleted element : $ele";
 break;
 case 6:
 print_r($arr);
 break;
 } }
Set b q2
Write a menu driven program to perform the following stack related operations.
a) Insert an element in stack.
b) Delete an element from stack.[Hint: array_push(), array_pop()]
AnsHTML File:
<html>
<body bgcolor=skyblue>
<form action="ass2C1.php" method="post">
Enter choice :
<br><input type="radio" name="ch" value=1> Insert element in stack <br>
<input type="radio" name="ch" value=2> Delete element from stack <br>
<input type="radio" name="ch" value=3> Display content of stack <br>
<input type="radio" name="ch" value=4> Insert element in queue<br>
<input type="radio" name="ch" value=5> Delete element from queue <br>
<input type="radio" name="ch" value=6> Display content of queue <br>
<br>
<input type="submit" value="submit">
<input type="reset" value="reset">
</body>
</html>
<?php
 interface Cyl
 {
 function area();
 function volume();
 }
 class Cylinder implements Cyl
 {
 public $PI=3.14;
 public $a;
 public $r;
 public $h;
 function __construct($r,$h)
 {
 $this->r=$r;
 $this->h=$h;
 }
 function area()
 {
 $this->a=2*$this->PI*($this->h*$this->r);
 echo"Area of Cylinder= ".$this->a."<br>";
 }
 function volume()
 {
 $this->a=$this->PI*$this->r*$this->r*$this->h;
 echo"Volume of Cylinder= ".$this->a."<br>";
 }
 }
 $c=new Cylinder(10,7);
 $c->area();
 $c->volume();
?>
Assignment no.4 Set b q2
<html>
 <head>
 <link rel="stylesheet" href="style/style.css">
 </head>
 <body>
 <div class="container">
 <div class="row py-3 " >
 <div class="pt-4 col-md-5 form-group py-5 px-5" style="border:2px solid green">
 <h4 class="text-center">Select following Options</h4><br>
 <form action="#" method="post">
 <input type="radio" name="r1" value="1" class=""> Master table<br>
 <input type="radio" name="r1" id="" value="2"> Sorting By Emp_Code <br>
 <div class="form-group row">
 <label class="col-sm-5 col-form-label">
 <input type="radio" name="r1" value="3"> Search By Name</label>
 <div class="col-sm-6">
 <input type="text" name="nm" class="form-control">
 </div>
 </div>
 <input type="radio" name="r1" id="" value="4"> Display Salary <br><br>
 <input type="submit" value="Submit" name="submit" class="btn btn-outline-primary">
 <input type="reset" value="Clear" class=" ml-2 btn btn-outline-danger">
 </form>
 </div>
 <div class="col-md-7">
<?php
if(isset($_POST['submit'])){
 class employee{
 public $code,$name,$des;
 function __construct($a,$b,$c){
 $this->code=$a;
 $this->name=$b;
 $this->des=$c;
 }
 public function disemp(){
 echo "<td>". $this->code ."</td><td>".$this->name."</td><td>".$this->des."</td>";
 }
 public function getName(){
 return $this->name;
 }
 }
 class emp_acc extends employee{
 public $ano, $jdate;
 function __construct($a,$b,$c,$d,$e){
 parent::__construct($a,$b,$c);
 $this->ano=$d;
 $this->jdate=$e;
 }
 public function disacc(){
 echo "<td>". $this->ano ."</td><td>".$this->jdate."</td>";
 }
 }
 class emp_sal extends emp_acc{
 public $bs, $earn, $ded, $total;
 function __construct($a,$b,$c,$d,$e,$f,$g,$h){
 parent::__construct($a,$b,$c,$d,$e);
 $this->bs=$f;
 $this->earn=$g;
 $this->ded=$h;
 $this->total = $this->bs+$this->earn-$this->ded;
 }
 public function dissal(){
 echo "<td>".$this->bs ."</td><td>".$this->earn."</td><td>".$this->ded."</td><td>".$this-
>total."</td>";
 }
 }
$e1[0]=new emp_sal(1,"Akash","HOD",10001,"02/02/2009",30000,1000,200);
$e1[1]=new emp_sal(2,"Akash","HOD",10002,"12/10/2012",29000,3500,400);
$e1[2]=new emp_sal(3,"Ramesh","HOD",10003,"18/11/2013",24000,2500,250);
$e1[3]=new emp_sal(4,"Swara","HOD",10004,"19/05/2015",21000,3000,650);
$e1[4]=new emp_sal(5,"Priya","HOD",10005,"26/07/2017",27000,4000,750);
$ch=$_POST['r1'];
$nm=$_POST['nm'];
$flag=0;
function mastertable($e1){
 echo "<table class='table'>
 <tr><thead class='thead-dark'><th>Emp code</th>
 <th>Emp Name</th><th>Designation</th>
 <th>Account No</th><th>Joining Date</th>
 <th>Basic Pay</th><th>Earning</th>
 <th>Deduction</th><th>Total Salary</th></thead></tr>";
 for($i=0; $i<5; $i++){
 echo "<tr>";
 $e1[$i]->disemp();
 $e1[$i]->disacc();
 $e1[$i]->dissal();
 echo "</tr>";
 }
 echo"</table>";
}
switch($ch){
 case 1 : mastertable($e1);
 break;
 case 2 : echo "Sorted details <br>";
 function srt($a,$b){
 return strcmp($a->code,$b->code);
 }
 mastertable($e1);
 usort($e1,"srt");
 break;
 case 3 :
 for($i=0;$i<5; $i++){
 $t=$e1[$i]->getName();
 if($t==$nm){
 $flag=1;
 break;
 }
 }
 if($flag==0){
 echo "<div class='alert alert-danger' role='alert'>
 <em>Name Not Found</em>
 </div>";
 }else{
 echo "<div class='alert alert-success' role='alert'>
 <em>Name Found</em>
 </div>";
 }
 break;
 case 4 : echo "Display Salary <br>";
 echo "<table class='table'>
 <tr>
 <thead class='thead-dark'>
 <th>Emp Name</th>
 <th>Basic Pay</th>
 <th>Earning</th>
 <th>Deduction</th>
 <th>Total Salary</th>
 </tr>";
 for($i=0; $i<5; $i++){
 echo "<tr> <td> ";
 $e1[$i]->getName();
 echo "</td>";
 $e1[$i]->dissal();
 }
 echo "</tr></table>";
 break;
 }
}
?>
 </div>
 </div>
 </div>
 </body>
</html>
<?php
class Employee
{
private $eid,$ename,$edept,$sal;
function __construct($a,$b,$c,$d)
{
$this->eid=$a;
$this->ename=$b;
$this->edept=$c;
$this->sal=$d;
}
public function getdata()
{
return $this->sal;
}
public function display()
{
echo $this->eid."
";
echo $this->ename."
";
echo $this->edept."
";
//echo $this->ename."
";
}
}
class Manager extends Employee
{
private $bonus;
public static $total1=0;
function __construct($a,$b,$c,$d,$e)
{
parent::__construct($a,$b,$c,$d);
$this->bonus=$e;
}
public function max($ob)
{
$sal=$this->getdata();
$total=$sal+$this->bonus;
if($total>self::$total1)
{
self::$total1=$total;
return $this;
}
else
{
return $ob;
}
}
public function display()
{
parent::display();
echo self::$total1;
}
}
$ob=new Manager(0,"ABC","",0,0);
$ob1=new Manager(1,"ramdas","computer",28000,2000);
$ob=$ob1->max($ob);
$ob2=new Manager(2,"ramdas1","computer",30000,2500);
$ob=$ob2->max($ob);
$ob3=new Manager(3,"ramdas2","computer",32000,3000);
$ob=$ob3->max($ob);
$ob4=new Manager(4,"ramdas","computer",28000,4000);
$ob=$ob4->max($ob);
$ob5=new Manager(5,"ramdas","computer",28000,5000);
$ob=$ob5->max($ob);
$ob->display(); ?>
Assignment no.4 set a q4
<?php
class intro
{
var $i;
function f1() {}
function f2() {}
}
class intro_1 extends intro
{
var $j,$k;
function f3() {}
function f4() {}
}
$ob=new intro_1();
if(is_object($ob)) //returns boolean value true if an object ob is created
{
echo get_class($ob); //returns class name of given object
}
if(method_exists($ob,'f4')) //returns tru if the method f4 exists for the object ob
{
echo "method f4 exists";
}
var_dump(get_object_vars($ob)); //retuns an array of parameter / variables for given object
?>
Assignment no4 set a q1
<?php
 interface Cyl
 {
 function area();
 function volume();
 }
 class Cylinder implements Cyl
 {
 public $PI=3.14;
 public $a;
 public $r;
 public $h;
 function __construct($r,$h)
 {
 $this->r=$r;
 $this->h=$h;
 }
 function area()
 {
 $this->a=2*$this->PI*($this->h*$this->r);
 echo"Area of Cylinder= ".$this->a."<br>";
 }
 function volume()
 {
 $this->a=$this->PI*$this->r*$this->r*$this->h;
 echo"Volume of Cylinder= ".$this->a."<br>";
 }
 }
 $c=new Cylinder(10,7);
 $c->area();
 $c->volume(); ?>
Assignment no.4 set b q1
<!DOCTYPE html>
<html>
 <body>
 <form action="slip12.php" method="GET">
 Please select your Account<br />
 <input type="checkbox" name="check_b[]" value="saving" />Saving Account<br />
 <input type="checkbox" name="check_b[]" value="current" />Current Account<br />
 <select id="saving">
 <option value="create">Create</option>
 <option value="deposite">Deposit</option>
 <option value="withderw">Withderw</option>
</select>
 <input type="submit" value="sumbit" />
 </form>
 </body>
</html>
slip12.php
<!DOCTYPE html>
<html>
<body>
<?php
class Account {
 public $acc_no;
 public $acc_name;
 public function __construct($acc_name, $acc_no) {
 $this->acc_name = $acc_name;
 $this->acc_no = $acc_no;
 }
 public function intro() {
 echo "The Account name {$this->acc_name} and Account No is {$this->acc_no}.";
}
}
class saveing_acc extends Account {
 public $blance;
 public $min_amount;
 public function __construct($acc_name, $acc_no, $blance,$min_amount) {
 $this->acc_name = $acc_name;
 $this->acc_no = $acc_no;
 $this->blance = $blance;
 $this->min_amount = $min_amount;
 }
 public function intro() {
 echo"<table border='2'>";
 echo"<tr><td>Account Name</td><td>Account
no</td><td>balance</td><td>min_balance</td></tr>";

 echo "<tr><td>{$this->acc_name}</td>";
 echo "<td>{$this->acc_no}</td>" ;
 echo"<td>{$this->blance}</td>";
 echo"<td>{$this->min_amount}</td></tr>";

 }
}
class current_acc extends Account {
 public $blan;
 public $min_amt;
 public function __construct($acc_name, $acc_no, $blan,$min_amount) {
 $this->acc_name = $acc_name;
 $this->acc_no = $acc_no;
 $this->blan = $blan;
 $this->min_amount = $min_amount;
 }
 public function intro() {

 echo " <tr><td>{$this->acc_name}</td>";
 echo "<td>{$this->acc_no}</td>" ;
 echo "<td>{$this->blan}</td>";
 echo "<td>{$this->min_amount}</td></tr> ";

 }
}
echo"</table>";
$saveing_acc= new saveing_acc("Ravindra", 1111, 5000,1000);
$saveing_acc->intro();
$current_acc=new current_acc("Kiran",2222,100000,1000);
$current_acc->intro();
?>
</body>
</html>
Volume and area of sphere and cylinder
<html>
<body>
<form action="slip10_Q2.php" method=get>
<center><h2>For Cone & Cylinder</h2>
<table>
<tr><td>Enter Radius </td><td><input type="text" name="r"></td></tr>
<tr><td>Enter Height</td><td> <input type="text" name="h"></td></tr>
<tr><td><input type="radio" name=op value=1>Cone</td>
<td><input type="radio" name=op value=2>Cylinder</td></tr>
</table>
<table>
<center><h2>For Sphere</h2></center>
<tr><td>Enter Radius</td><td> <input type="text" name="r1"></td></tr>
<tr><td></td><td><input type="radio" name=op value=3>Sphere</td></tr>
<tr><td></td><td><input type="submit" value="SUBMIT"></td></tr>
</table>
</center>
</form>
</body>
</html>
PHP file :
<?php
 define('pi',3.14);
 interface shape
 {
 function calc_area($r,$h);
 function calc_vol($r,$h);
 }

 class sphere implements shape
 {
 function calc_area($r,$r)
 {
 return 4*pi*$r*$r;
 }
 function calc_vol($r,$r)
 {
 return (4/3)pi$r*$r*$r;
 }
 }
 class cylinder implements shape
 {
 function calc_area($r,$h)
 {
 return 2*pi*$r*($r+$h);
 }
 function calc_vol($r,$h)
 {
 return pi*$r*$r*$h;
 }
 }
 class cone implements shape
 {
 function calc_area($r,$h)
 {
 return 0.5*$r*$r*$h;
 }
 function calc_vol($r,$h)
 {
 return $r*$r*$r*$h;
 }
 }
 $op=$_GET['op'];
 switch($op)
 {
 case 1 : $r=$_GET['r'];
 $h=$_GET['h'];
$ob=new cone();
 $a=$ob->calc_area($r,$h);
 $v=$ob->calc_vol($r,$h);
echo "Area of cone is".$a."<br>Volume of Cone is".$v;
break;
 case 2 : $r=$_GET['r'];
 $h=$_GET['h'];
$ob=new cylinder();
 $a=$ob->calc_area($r,$h);
 $v=$ob->calc_vol($r,$h);
echo "Area of Cylinder is".$a."<br>Volume of Cylinder
is".$v;
 break;

 case 3 : $r=$_GET['r'];
 $ob=new sphere();
 $a=$ob->calc_area($r,$r);
 $v=$ob->calc_vol($r,$r);
 echo "Area of Sphere is".$a."<br>Volume of Sphere
is".$v;
 break;
 }
?>
